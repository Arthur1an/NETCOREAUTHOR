// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: authenticate.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Soit.Authentication.Protos {

  /// <summary>Holder for reflection information generated from authenticate.proto</summary>
  public static partial class AuthenticateReflection {

    #region Descriptor
    /// <summary>File descriptor for authenticate.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AuthenticateReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJhdXRoZW50aWNhdGUucHJvdG8SE1NvaXQuQXV0aGVudGljYXRpb24aG2dv",
            "b2dsZS9wcm90b2J1Zi9lbXB0eS5wcm90bxoeZ29vZ2xlL3Byb3RvYnVmL3dy",
            "YXBwZXJzLnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3Rv",
            "GhtQcm90b3MvaW5mcmFzdHJ1Y3R1cmUucHJvdG8iMAoMTG9naW5SZXF1ZXN0",
            "EhAKCHVzZXJOYW1lGAEgASgJEg4KBmNpcGhlchgCIAEoCSKKAQoKTG9naW5S",
            "ZXBseRIOCgZ1c2VySWQYASABKAkSLwoJbGVnYWxOYW1lGAIgASgLMhwuZ29v",
            "Z2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEg0KBXRva2VuGAMgASgJEiwKCGV4",
            "cGlyZUF0GAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCKRAQoR",
            "VG9rZW5SZWZyZXNoUmVwbHkSDgoGdXNlcklkGAEgASgJEi8KCWxlZ2FsTmFt",
            "ZRgCIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRINCgV0b2tl",
            "bhgDIAEoCRIsCghleHBpcmVBdBgEIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5U",
            "aW1lc3RhbXAy7AEKE0F1dGhlbnRpY2F0ZVNlcnZpY2USSwoFTG9naW4SIS5T",
            "b2l0LkF1dGhlbnRpY2F0aW9uLkxvZ2luUmVxdWVzdBofLlNvaXQuQXV0aGVu",
            "dGljYXRpb24uTG9naW5SZXBseRI4CgZMb2dvdXQSFi5nb29nbGUucHJvdG9i",
            "dWYuRW1wdHkaFi5nb29nbGUucHJvdG9idWYuRW1wdHkSTgoMVG9rZW5SZWZy",
            "ZXNoEhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5GiYuU29pdC5BdXRoZW50aWNh",
            "dGlvbi5Ub2tlblJlZnJlc2hSZXBseUIdqgIaU29pdC5BdXRoZW50aWNhdGlv",
            "bi5Qcm90b3NiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Soit.Infrastructure.InfrastructureReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Soit.Authentication.Protos.LoginRequest), global::Soit.Authentication.Protos.LoginRequest.Parser, new[]{ "UserName", "Cipher" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Soit.Authentication.Protos.LoginReply), global::Soit.Authentication.Protos.LoginReply.Parser, new[]{ "UserId", "LegalName", "Token", "ExpireAt" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Soit.Authentication.Protos.TokenRefreshReply), global::Soit.Authentication.Protos.TokenRefreshReply.Parser, new[]{ "UserId", "LegalName", "Token", "ExpireAt" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class LoginRequest : pb::IMessage<LoginRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoginRequest> _parser = new pb::MessageParser<LoginRequest>(() => new LoginRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Soit.Authentication.Protos.AuthenticateReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest(LoginRequest other) : this() {
      userName_ = other.userName_;
      cipher_ = other.cipher_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest Clone() {
      return new LoginRequest(this);
    }

    /// <summary>Field number for the "userName" field.</summary>
    public const int UserNameFieldNumber = 1;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cipher" field.</summary>
    public const int CipherFieldNumber = 2;
    private string cipher_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cipher {
      get { return cipher_; }
      set {
        cipher_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserName != other.UserName) return false;
      if (Cipher != other.Cipher) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (Cipher.Length != 0) hash ^= Cipher.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserName);
      }
      if (Cipher.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Cipher);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserName);
      }
      if (Cipher.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Cipher);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (Cipher.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cipher);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.Cipher.Length != 0) {
        Cipher = other.Cipher;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
          case 18: {
            Cipher = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
          case 18: {
            Cipher = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LoginReply : pb::IMessage<LoginReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoginReply> _parser = new pb::MessageParser<LoginReply>(() => new LoginReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Soit.Authentication.Protos.AuthenticateReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginReply(LoginReply other) : this() {
      userId_ = other.userId_;
      LegalName = other.LegalName;
      token_ = other.token_;
      expireAt_ = other.expireAt_ != null ? other.expireAt_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginReply Clone() {
      return new LoginReply(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "legalName" field.</summary>
    public const int LegalNameFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_legalName_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string legalName_;
    /// <summary>
    ///2021/3/9 update
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LegalName {
      get { return legalName_; }
      set {
        legalName_ = value;
      }
    }


    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 3;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expireAt" field.</summary>
    public const int ExpireAtFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp expireAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ExpireAt {
      get { return expireAt_; }
      set {
        expireAt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (LegalName != other.LegalName) return false;
      if (Token != other.Token) return false;
      if (!object.Equals(ExpireAt, other.ExpireAt)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (legalName_ != null) hash ^= LegalName.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (expireAt_ != null) hash ^= ExpireAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (legalName_ != null) {
        _single_legalName_codec.WriteTagAndValue(output, LegalName);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Token);
      }
      if (expireAt_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExpireAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (legalName_ != null) {
        _single_legalName_codec.WriteTagAndValue(ref output, LegalName);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Token);
      }
      if (expireAt_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExpireAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (legalName_ != null) {
        size += _single_legalName_codec.CalculateSizeWithTag(LegalName);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (expireAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpireAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginReply other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.legalName_ != null) {
        if (legalName_ == null || other.LegalName != "") {
          LegalName = other.LegalName;
        }
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      if (other.expireAt_ != null) {
        if (expireAt_ == null) {
          ExpireAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ExpireAt.MergeFrom(other.ExpireAt);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            string value = _single_legalName_codec.Read(input);
            if (legalName_ == null || value != "") {
              LegalName = value;
            }
            break;
          }
          case 26: {
            Token = input.ReadString();
            break;
          }
          case 34: {
            if (expireAt_ == null) {
              ExpireAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpireAt);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            string value = _single_legalName_codec.Read(ref input);
            if (legalName_ == null || value != "") {
              LegalName = value;
            }
            break;
          }
          case 26: {
            Token = input.ReadString();
            break;
          }
          case 34: {
            if (expireAt_ == null) {
              ExpireAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpireAt);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TokenRefreshReply : pb::IMessage<TokenRefreshReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TokenRefreshReply> _parser = new pb::MessageParser<TokenRefreshReply>(() => new TokenRefreshReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TokenRefreshReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Soit.Authentication.Protos.AuthenticateReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenRefreshReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenRefreshReply(TokenRefreshReply other) : this() {
      userId_ = other.userId_;
      LegalName = other.LegalName;
      token_ = other.token_;
      expireAt_ = other.expireAt_ != null ? other.expireAt_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenRefreshReply Clone() {
      return new TokenRefreshReply(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "legalName" field.</summary>
    public const int LegalNameFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_legalName_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string legalName_;
    /// <summary>
    ///2021/3/9 update
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LegalName {
      get { return legalName_; }
      set {
        legalName_ = value;
      }
    }


    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 3;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expireAt" field.</summary>
    public const int ExpireAtFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp expireAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ExpireAt {
      get { return expireAt_; }
      set {
        expireAt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TokenRefreshReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TokenRefreshReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (LegalName != other.LegalName) return false;
      if (Token != other.Token) return false;
      if (!object.Equals(ExpireAt, other.ExpireAt)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (legalName_ != null) hash ^= LegalName.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (expireAt_ != null) hash ^= ExpireAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (legalName_ != null) {
        _single_legalName_codec.WriteTagAndValue(output, LegalName);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Token);
      }
      if (expireAt_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExpireAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (legalName_ != null) {
        _single_legalName_codec.WriteTagAndValue(ref output, LegalName);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Token);
      }
      if (expireAt_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExpireAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (legalName_ != null) {
        size += _single_legalName_codec.CalculateSizeWithTag(LegalName);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (expireAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpireAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TokenRefreshReply other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.legalName_ != null) {
        if (legalName_ == null || other.LegalName != "") {
          LegalName = other.LegalName;
        }
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      if (other.expireAt_ != null) {
        if (expireAt_ == null) {
          ExpireAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ExpireAt.MergeFrom(other.ExpireAt);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            string value = _single_legalName_codec.Read(input);
            if (legalName_ == null || value != "") {
              LegalName = value;
            }
            break;
          }
          case 26: {
            Token = input.ReadString();
            break;
          }
          case 34: {
            if (expireAt_ == null) {
              ExpireAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpireAt);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            string value = _single_legalName_codec.Read(ref input);
            if (legalName_ == null || value != "") {
              LegalName = value;
            }
            break;
          }
          case 26: {
            Token = input.ReadString();
            break;
          }
          case 34: {
            if (expireAt_ == null) {
              ExpireAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpireAt);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
